{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "summary": "This method show website homepage",
        "parameters": [],
        "responses": { "200": { "description": "show website homepage" } },
        "tags": ["root"]
      }
    },
    "/users": {
      "post": {
        "operationId": "UsersController_create",
        "summary": "This method creates a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateUserDto" }
            }
          }
        },
        "responses": {
          "201": { "description": "user created" },
          "400": { "description": "invalid input" },
          "409": { "description": "user already exists" }
        },
        "tags": ["users"]
      },
      "get": {
        "operationId": "UsersController_findAll",
        "summary": "This method show all users",
        "parameters": [],
        "responses": {
          "200": { "description": "showing all users" },
          "400": { "description": "bad request" },
          "404": { "description": "users not found" }
        },
        "tags": ["users"]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "This method show one user by id param",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "showing one user by id param" },
          "400": { "description": "invalid id supplied" }
        },
        "tags": ["users"]
      },
      "put": {
        "operationId": "UsersController_update",
        "summary": "This method updates a user by id param",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateUserDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "user updated" },
          "400": { "description": "invalid id supplied" }
        },
        "tags": ["users"]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "This method deletes a user by id param",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "user deleted" },
          "404": { "description": "user not found" }
        },
        "tags": ["users"]
      }
    },
    "/users/addField": {
      "put": {
        "operationId": "UsersController_addField",
        "summary": "This method adds a new user field",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "enum": ["string", "number", "boolean"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "201": { "description": "field created" },
          "400": { "description": "invalid input" },
          "409": { "description": "field already exists" }
        },
        "tags": ["users"]
      }
    }
  },
  "info": {
    "title": "Swagger Mycontacts API ðŸ‘¾",
    "description": "Swagger Mycontacts CRUD API",
    "version": "1.0",
    "contact": {
      "name": "Swagger",
      "url": "http://swagger.io",
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "tags": [{ "name": "users", "description": "" }],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "first_name": { "type": "string", "minLength": 2, "maxLength": 20 },
          "last_name": { "type": "string", "minLength": 2, "maxLength": 20 },
          "email": { "type": "string" },
          "phone": { "type": "number", "minLength": 11 },
          "type": { "enum": ["string", "number", "boolean"], "type": "string" },
          "address": { "type": "string", "maxLength": 60 }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "phone",
          "type",
          "address"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "first_name": { "type": "string", "minLength": 2, "maxLength": 20 },
          "last_name": { "type": "string", "minLength": 2, "maxLength": 20 },
          "email": { "type": "string" },
          "phone": { "type": "number", "minLength": 11 },
          "type": { "enum": ["string", "number", "boolean"], "type": "string" },
          "address": { "type": "string", "maxLength": 60 }
        }
      }
    }
  }
}
